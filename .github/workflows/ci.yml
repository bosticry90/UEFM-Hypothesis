name: CI

on:
  push:
    branches: [ main, "**", "!gh-pages" ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest -q --cov=toe --cov-report=xml --cov-report=term

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  # Optional: gate on minimum coverage (e.g., 85%)
  coverage-gate:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-3.10
          path: .
      - name: Enforce minimum coverage (85%)
        run: |
          # Grep the line like: 'lines......: 87.50% (xyz/abc)'
          PCT=$(python - <<'PY'
import xml.etree.ElementTree as ET
pct=float(ET.parse("coverage.xml").getroot().get("line-rate", "0"))*100
print(int(pct))
PY
)
          echo "Coverage: ${PCT}%"
          [ "$PCT" -ge 85 ]
